/*
 * Created on 30 déc. 2013 ( Time 14:44:47 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 
/******
keyAttributes size = 1
nonKeyAttributes size = 7
bigList size = 8
. code - int
. city - String
. contact - String
. email - String
. name - String
. phone - String
. zipCode - Integer
. countryCode - String
******/
package org.telosys.starterkits.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Persistent class for entity stored in table "publisher"
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
@Entity
@Table(name="publisher", schema="public" )
// Define named queries here
// @NamedQueries ( {
//  @NamedQuery ( name="Publisher.query1", query="SELECT x FROM Publisher x WHERE  " ),
//  @NamedQuery ( name="Publisher.query2", query="SELECT x FROM Publisher x WHERE  " )
// } )
public class Publisher implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="code", nullable=false)
    private int        code         ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="city", length=45)
    private String     city         ;

    @Column(name="contact", length=45)
    private String     contact      ;

    @Column(name="email", length=45)
    private String     email        ;

    @Column(name="name", length=45)
    private String     name         ;

    @Column(name="phone", length=14)
    private String     phone        ;

    @Column(name="zip_code")
    private Integer    zipCode      ;

	// "countryCode" (column "country_code") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="country_code", referencedColumnName="code")
    private Country    country     ;

    @OneToMany(mappedBy="publisher", targetEntity=Book.class)
    private List<Book> listOfBook  ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Publisher()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCode( int code )
    {
        this.code = code ;
    }
    public int getCode()
    {
        return this.code;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : city ( varchar ) 
    public void setCity( String city )
    {
        this.city = city;
    }
    public String getCity()
    {
        return this.city;
    }

    //--- DATABASE MAPPING : contact ( varchar ) 
    public void setContact( String contact )
    {
        this.contact = contact;
    }
    public String getContact()
    {
        return this.contact;
    }

    //--- DATABASE MAPPING : email ( varchar ) 
    public void setEmail( String email )
    {
        this.email = email;
    }
    public String getEmail()
    {
        return this.email;
    }

    //--- DATABASE MAPPING : name ( varchar ) 
    public void setName( String name )
    {
        this.name = name;
    }
    public String getName()
    {
        return this.name;
    }

    //--- DATABASE MAPPING : phone ( varchar ) 
    public void setPhone( String phone )
    {
        this.phone = phone;
    }
    public String getPhone()
    {
        return this.phone;
    }

    //--- DATABASE MAPPING : zip_code ( int4 ) 
    public void setZipCode( Integer zipCode )
    {
        this.zipCode = zipCode;
    }
    public Integer getZipCode()
    {
        return this.zipCode;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setCountry( Country country )
    {
        this.country = country;
    }
    public Country getCountry()
    {
        return this.country;
    }

    @XmlTransient
    public void setListOfBook( List<Book> listOfBook )
    {
        this.listOfBook = listOfBook;
    }
    public List<Book> getListOfBook()
    {
        return this.listOfBook;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
        StringBuffer sb = new StringBuffer(); 
        sb.append(code); 
        sb.append("|"); 
        sb.append(city); 
        sb.append( "|" ); 
        sb.append(contact); 
        sb.append( "|" ); 
        sb.append(email); 
        sb.append( "|" ); 
        sb.append(name); 
        sb.append( "|" ); 
        sb.append(phone); 
        sb.append( "|" ); 
        sb.append(zipCode); 
        return sb.toString(); 
    }

}
