#---------------------------------------------------------
# Templates configuration file
# Values separated by ";"
# . value 1 : the label
# . value 2 : the file to be generated ( var allowed : ${BEANNAME}, ${BEANNAME_UC}, ${BEANNAME_LC} )
# . value 3 : the project folder where to generate ( var allowed : ${BEANNAME}, ${BEANNAME_UC}, ${BEANNAME_LC} )
# . value 4 : the template to use
# . value 5 : number of execution : "1" for "ONCE" for all entities, default is multiple executions ( executed for each entity )
#---------------------------------------------------------
# Since v 2.0 the project's variables can be used in file and folder name
#---------------------------------------------------------

# Spring MVC
Welcome                 ; index.jsp                      ; ${WEB}/WEB-INF/pages                ; spring-mvc/index.vm                       ; 1
Spring Controller       ; ${BEANNAME}Controller.java     ; ${SRC}/${ROOT_PKG}/web              ; spring-mvc/spring_bean_controller.vm      ; *
Spring Form             ; ${BEANNAME}FormController.java ; ${SRC}/${ROOT_PKG}/web              ; spring-mvc/spring_bean_form_controller.vm ; *
Spring JSP form        	; ${BEANNAME_LC}.jsp		     ; ${WEB}/WEB-INF/pages/${BEANNAME_LC} ; spring-mvc/spring_jsp_form.vm             ; *
Spring JSP list        	; ${BEANNAME_LC}List.jsp	     ; ${WEB}/WEB-INF/pages/${BEANNAME_LC} ; spring-mvc/spring_jsp_list.vm             ; *

# Service
Entity Bean Service 	   ; ${BEANNAME}Service.java   ; ${SRC}/${ROOT_PKG}/service    ; jpa/bean_service.vm                ; *

# JPA

# JPA : Entities classes ( with composite key classes if any )
JPA entity (without links)     ; ${BEANNAME}.java             ; ${SRC}/${ENTITY_PKG}                           ; jpa/jpa_bean_without_links.vm ; *
JPA entity (with links)        ; ${BEANNAME}.java             ; ${SRC}/${ENTITY_PKG}                           ; jpa/jpa_bean_with_links.vm    ; *
Entity mock tool               ; ${BEANNAME}Mock.java         ; ${SRC}/${ROOT_PKG}/mock                        ; jpa/bean_mock.vm    ; *

# JPA : Entities persistence services classes
Persistence service interface   ; ${BEANNAME}Persistence.java    ; ${SRC}/${ROOT_PKG}/persistence/services     ; jpa/persistence_service.vm      ; *
Persistence service implem. JPA ; ${BEANNAME}PersistenceJPA.java ; ${SRC}/${ROOT_PKG}/persistence/services/jpa ; jpa/persistence_service_jpa.vm  ; *
Persistence service implem. FAKE; ${BEANNAME}PersistenceFAKE.java; ${SRC}/${ROOT_PKG}/persistence/services/fake; jpa/persistence_service_fake.vm ; *

Persistence service JUnit test  ; ${BEANNAME}PersistenceTest.java; ${TEST_SRC}/${ROOT_PKG}/test/persistence    ; jpa/persistence_service_junit.vm ; *

# JPA : Environment classes for persistence services (to be generated just once)
Persistence configuration      ; PersistenceConfig.java          ; ${SRC}/${ROOT_PKG}/persistence              ; jpa/env/PersistenceConfig.vm          ; 1
Persistence service provider   ; PersistenceServiceProvider.java ; ${SRC}/${ROOT_PKG}/persistence              ; jpa/env/PersistenceServiceProvider.vm ; 1

Mock values class              ; MockValues.java                 ; ${SRC}/${ROOT_PKG}/mock/tool                ; jpa/env/MockValues.vm         ; 1

FAKE generic service  class    ; GenericFakeService.java         ; ${SRC}/${ROOT_PKG}/persistence/commons/fake ; jpa/env/GenericFakeService.vm         ; 1

JPA environment class          ; JpaEnvironment.java             ; ${SRC}/${ROOT_PKG}/persistence/commons/jpa  ; jpa/env/JpaEnvironment.vm          ; 1
JPA operation interface        ; JpaOperation.java               ; ${SRC}/${ROOT_PKG}/persistence/commons/jpa  ; jpa/env/JpaOperation.vm            ; 1
JPA generic service class      ; GenericJpaService.java          ; ${SRC}/${ROOT_PKG}/persistence/commons/jpa  ; jpa/env/GenericJpaService.vm       ; 1

