/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
## ----------------------------------------------------------------------
#if ( $entity.hasCompositePrimaryKey() )
#set( $primaryKeyType = "${entity.name}Id" )
#else 
#set( $primaryKeyType = $entity.keyAttributes[0].wrapperType )
#end
## ----------------------------------------------------------------------

package ${target.javaPackageFromFolder($SRC)};

#foreach( $import in $entity.importsForKeyFields )
import $import;
#end

import $entity.fullName ;
#if ( $entity.hasCompositePrimaryKey() )
import ${entity.fullName}Id ;
#end
import ${ROOT_PKG}.persistence.commons.jpa.GenericJpaService;
import ${ROOT_PKG}.persistence.services.${entity.name}Persistence;

## Cl√© primaire
#if ( $beanClass.hasCompositePrimaryKey() )
import ${ENTITY_PKG}.${beanClass.name}Id;
#set( $keyType = "${beanClass.name}Id" )
#set( $keyName = "id" )
#set( $keySetter = "setId" )
#set( $keyGetter = "getId" )
#else
#foreach( $field in $entity.keyAttributes )
#set( $keyType = "$field.wrapperType" )
#set( $keyName = "$field.formatedName(0)" )
#set( $keyField = $field )
#set( $keySetter = $field.setter )
#set( $keyGetter = $field.getter )
#end
#end
/**
 * JPA implementation for basic persistence operations ( entity "${entity.name}" )
 * 
 * @author Telosys Tools Generator
 *
 */
public class ${entity.name}PersistenceJPA extends GenericJpaService<${entity.name}, $primaryKeyType> implements ${entity.name}Persistence {

	/**
	 * Constructor
	 */
	public ${entity.name}PersistenceJPA() {
		super(${entity.name}.class);
	}

	/**
	 * Delete ${entity.name.toLowerCase()}.
	 */
	public boolean delete(${entity.name} ${entity.name.toLowerCase()}) {
		return delete(${entity.name.toLowerCase()}.$keyGetter());
	}

}
